{"version":3,"file":"support.js","sources":["../src/constants.ts","../src/commands.ts","../src/support.ts"],"sourcesContent":["const PLUGIN_NAME = \"cp-visual-regression-diff\";\nexport const LINK_PREFIX = `#${PLUGIN_NAME}-`;\nexport const OVERLAY_CLASS = `${PLUGIN_NAME}-overlay`;\nexport const IMAGE_SNAPSHOT_PREFIX = `__${PLUGIN_NAME}_snapshots__`;\n\nexport enum FILE_SUFFIX {\n  diff = \".diff\",\n  actual = \".actual\",\n}\n\nexport const TASK = {\n  getScreenshotPathInfo: `${PLUGIN_NAME}-getScreenshotPathInfo`,\n  compareImages: `${PLUGIN_NAME}-compareImages`,\n  approveImage: `${PLUGIN_NAME}-approveImage`,\n  cleanupImages: `${PLUGIN_NAME}-cleanupImages`,\n  doesFileExist: `${PLUGIN_NAME}-doesFileExist`,\n  /* c8 ignore next */\n};\n\nexport const PATH_VARIABLES = {\n  specPath: \"{spec_path}\",\n  unixSystemRootPath: \"{unix_system_root_path}\",\n  winSystemRootPath: \"{win_system_root_path}\",\n} as const;\n\nexport const WINDOWS_LIKE_DRIVE_REGEX = /^[A-Z]:$/;\n\nexport const METADATA_KEY = \"FRSOURCE_CPVRD_V\";\n","import { FILE_SUFFIX, LINK_PREFIX, TASK } from \"./constants\";\nimport type pixelmatch from \"pixelmatch\";\nimport * as Base64 from \"@frsource/base64\";\nimport type { CompareImagesTaskReturn } from \"./types\";\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Cypress {\n    type MatchImageOptions = {\n      screenshotConfig?: Partial<Cypress.ScreenshotDefaultsOptions>;\n      diffConfig?: Parameters<typeof pixelmatch>[5];\n      createMissingImages?: boolean;\n      updateImages?: boolean;\n      /**\n       * @deprecated since version 3.0, use imagesPath instead\n       */\n      imagesDir?: string;\n      imagesPath?: string;\n      maxDiffThreshold?: number;\n      forceDeviceScaleFactor?: boolean;\n      title?: string;\n      matchAgainstPath?: string;\n      // IDEA: to be implemented if support for files NOT from filesystem needed\n      // matchAgainst?: string | Buffer;\n    };\n\n    type MatchImageReturn = {\n      diffValue: number | undefined;\n      imgNewPath: string;\n      imgPath: string;\n      imgDiffPath: string;\n      imgNewBase64: string | undefined;\n      imgBase64: string | undefined;\n      imgDiffBase64: string | undefined;\n      imgNew: InstanceType<Cypress[\"Buffer\"]> | undefined;\n      img: InstanceType<Cypress[\"Buffer\"]> | undefined;\n      imgDiff: InstanceType<Cypress[\"Buffer\"]> | undefined;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interface Chainable<Subject> {\n      /**\n       * Command to create and compare image snapshots.\n       * @memberof Cypress.Chainable\n       * @example cy.get('.my-element').matchImage();\n       */\n      matchImage(\n        options?: Cypress.MatchImageOptions\n      ): Chainable<MatchImageReturn>;\n    }\n  }\n}\n\nconst constructCypressError = (log: Cypress.Log, err: Error) => {\n  // only way to throw & log the message properly in Cypress\n  // https://github.com/cypress-io/cypress/blob/5f94cad3cb4126e0567290b957050c33e3a78e3c/packages/driver/src/cypress/error_utils.ts#L214-L216\n  (err as unknown as { onFail: (e: Error) => void }).onFail = (err: Error) =>\n    log.error(err);\n  return err;\n};\n\nconst capitalize = (text: string) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n\nconst getPluginEnv = <K extends keyof Cypress.MatchImageOptions>(key: K) =>\n  Cypress.env(`pluginVisualRegression${capitalize(key)}`) as\n    | Cypress.MatchImageOptions[K]\n    | undefined;\n\nconst booleanOption = <K extends keyof Cypress.MatchImageOptions, Return>(\n  options: Cypress.MatchImageOptions,\n  key: K,\n  truthyValue: Return,\n  falsyValue: Return\n) =>\n  options[key] === false || getPluginEnv(key) === false\n    ? truthyValue\n    : falsyValue;\n\nconst optionWithDefaults = <K extends keyof Cypress.MatchImageOptions>(\n  options: Cypress.MatchImageOptions,\n  key: K,\n  defaultValue: NonNullable<Cypress.MatchImageOptions[K]>\n) => options[key] ?? getPluginEnv(key) ?? defaultValue;\n\nconst getImagesDir = (options: Cypress.MatchImageOptions) => {\n  const imagesDir = options.imagesDir || getPluginEnv(\"imagesDir\");\n\n  // TODO: remove in 4.0.0\n  if (imagesDir) {\n    console.warn(\n      \"@frsource/cypress-plugin-visual-regression-diff] `imagesDir` option is deprecated, use `imagesPath` instead (https://github.com/FRSOURCE/cypress-plugin-visual-regression-diff#configuration)\"\n    );\n  }\n\n  return imagesDir;\n};\n\nconst getImagesPath = (options: Cypress.MatchImageOptions) => {\n  const imagesDir = getImagesDir(options);\n\n  return (\n    (imagesDir && `{spec_path}/${imagesDir}`) ||\n    optionWithDefaults(options, \"imagesPath\", \"{spec_path}/__image_snapshots__\")\n  );\n};\n\nexport const getConfig = (options: Cypress.MatchImageOptions) => ({\n  scaleFactor: booleanOption(\n    options,\n    \"forceDeviceScaleFactor\",\n    1,\n    1 / window.devicePixelRatio\n  ),\n  createMissingImages: optionWithDefaults(options, \"createMissingImages\", true),\n  updateImages: optionWithDefaults(options, \"updateImages\", false),\n  imagesPath: getImagesPath(options),\n  maxDiffThreshold: optionWithDefaults(options, \"maxDiffThreshold\", 0.01),\n  diffConfig: optionWithDefaults(options, \"diffConfig\", {}),\n  screenshotConfig: optionWithDefaults(options, \"screenshotConfig\", {}),\n  matchAgainstPath: options.matchAgainstPath || undefined,\n});\n\nCypress.Commands.add(\n  \"matchImage\",\n  { prevSubject: \"optional\" },\n  (subject, options = {}) => {\n    const $el = subject as JQuery<HTMLElement> | undefined;\n    let title: string;\n\n    const {\n      scaleFactor,\n      createMissingImages,\n      updateImages,\n      imagesPath,\n      maxDiffThreshold,\n      diffConfig,\n      screenshotConfig,\n      matchAgainstPath,\n    } = getConfig(options);\n\n    const currentRetryNumber = (\n      cy as unknown as {\n        state: (s: string) => { currentRetry: () => number };\n      }\n    )\n      .state(\"test\")\n      .currentRetry();\n\n    return cy\n      .then(() =>\n        cy.task<{ screenshotPath: string; title: string }>(\n          TASK.getScreenshotPathInfo,\n          {\n            titleFromOptions:\n              options.title || Cypress.currentTest.titlePath.join(\" \"),\n            imagesPath,\n            specPath: Cypress.spec.relative,\n            currentRetryNumber,\n          },\n          { log: false }\n        )\n      )\n      .then(({ screenshotPath, title: titleFromTask }) => {\n        title = titleFromTask;\n        let imgPath: string;\n        return ($el ? cy.wrap($el) : cy)\n          .screenshot(screenshotPath, {\n            ...screenshotConfig,\n            onAfterScreenshot(el, props) {\n              imgPath = props.path;\n              screenshotConfig.onAfterScreenshot?.(el, props);\n            },\n            log: false,\n          })\n          .then(() => imgPath);\n      })\n      .then((imgPath) =>\n        cy\n          .task<CompareImagesTaskReturn>(\n            TASK.compareImages,\n            {\n              scaleFactor,\n              imgNew: imgPath,\n              imgOld:\n                matchAgainstPath || imgPath.replace(FILE_SUFFIX.actual, \"\"),\n              createMissingImages,\n              updateImages,\n              maxDiffThreshold,\n              diffConfig,\n            },\n            { log: false }\n          )\n          .then((res) => ({\n            res,\n            imgPath,\n          }))\n      )\n      .then(({ res, imgPath }) => {\n        const log = Cypress.log({\n          name: \"log\",\n          displayName: \"Match image\",\n          $el,\n        });\n\n        if (!res) {\n          log.set(\"message\", \"Unexpected error!\");\n          throw constructCypressError(log, new Error(\"Unexpected error!\"));\n        }\n\n        log.set(\n          \"message\",\n          `${res.message}${\n            res.imgDiffBase64 && res.imgNewBase64 && res.imgOldBase64\n              ? `\\n[See comparison](${LINK_PREFIX}${Base64.encode(\n                  encodeURIComponent(\n                    JSON.stringify({\n                      title,\n                      imgPath,\n                      imgDiffBase64: res.imgDiffBase64,\n                      imgNewBase64: res.imgNewBase64,\n                      imgOldBase64: res.imgOldBase64,\n                      error: res.error,\n                    })\n                  )\n                )})`\n              : \"\"\n          }`\n        );\n\n        if (res.error) {\n          log.set(\"consoleProps\", () => res);\n          throw constructCypressError(log, new Error(res.message));\n        }\n\n        return {\n          diffValue: res.imgDiff,\n          imgNewPath: imgPath,\n          imgPath: imgPath.replace(FILE_SUFFIX.actual, \"\"),\n          imgDiffPath: imgPath.replace(FILE_SUFFIX.actual, FILE_SUFFIX.diff),\n          imgNewBase64: res.imgNewBase64,\n          imgBase64: res.imgOldBase64,\n          imgDiffBase64: res.imgDiffBase64,\n          imgNew:\n            typeof res.imgNewBase64 === \"string\"\n              ? Cypress.Buffer.from(res.imgNewBase64, \"base64\")\n              : undefined,\n          img:\n            typeof res.imgOldBase64 === \"string\"\n              ? Cypress.Buffer.from(res.imgOldBase64, \"base64\")\n              : undefined,\n          imgDiff:\n            typeof res.imgDiffBase64 === \"string\"\n              ? Cypress.Buffer.from(res.imgDiffBase64, \"base64\")\n              : undefined,\n        };\n      });\n  }\n);\n","import * as Base64 from \"@frsource/base64\";\nimport \"./commands\";\nimport { LINK_PREFIX, OVERLAY_CLASS, TASK } from \"./constants\";\n\n/* c8 ignore start */\nfunction queueClear() {\n  (cy as unknown as { queue: { reset: () => void } }).queue.reset?.();\n  (cy as unknown as { queue: { clear: () => void } }).queue.clear();\n  (cy as unknown as { state: (k: string, value: unknown) => void }).state(\n    \"index\",\n    0\n  );\n}\n\nfunction queueRun() {\n  // needed to run a task outside of the test processing flow\n  (cy as unknown as { queue: { run: () => void } }).queue.run();\n}\n/* c8 ignore stop */\nexport const generateOverlayTemplate = ({\n  title,\n  imgNewBase64,\n  imgOldBase64,\n  imgDiffBase64,\n  wasImageNotUpdatedYet,\n  error,\n}: {\n  title: string;\n  imgNewBase64: string;\n  imgOldBase64: string;\n  imgDiffBase64: string;\n  wasImageNotUpdatedYet: boolean;\n  error: boolean;\n}) => `<div class=\"${OVERLAY_CLASS} runner\" style=\"position:fixed;z-index:10;top:0;bottom:0;left:0;right:0;display:flex;flex-flow:column\">\n  <header style=\"position:static\">\n  <nav style=\"display:flex;width:100%;align-items:center;justify-content:space-between;padding:10px 15px;\">\n    <h2>${title} - screenshot diff</h2>\n    <form style=\"display:flex;align-items:center;gap:5px;text-align:right\">\n      ${\n        wasImageNotUpdatedYet\n          ? `<button type=\"submit\"><i class=\"fa fa-check\"></i> Update screenshot</button>`\n          : error\n          ? \"Image was already updated, rerun test to see new comparison\"\n          : \"\"\n      }\n      <button type=\"button\" data-type=\"close\"><i class=\"fa fa-times\"></i> Close</button>\n    <form>\n  </nav>\n  </header>\n  <div style=\"padding:15px;overflow:auto\">\n    <div style=\"display:flex;justify-content:space-evenly;align-items:flex-start;gap:15px\">\n      <div\n        style=\"position:relative;background:#fff;border:solid 15px #fff\"\n        onmouseover=\"this.querySelector('div').style.opacity=0,this.querySelector('img').style.opacity=1\"\n        onmouseleave=\"this.querySelector('div').style.opacity=1,this.querySelector('img').style.opacity=0\"\n      >\n        <h3>New screenshot (hover mouse away too see the old one):</h3>\n        <img style=\"min-width:300px;width:100%;opacity:0\" src=\"data:image/png;base64,${imgNewBase64}\" />\n        <div style=\"position:absolute;top:0;left:0;background:#fff\">\n          <h3>Old screenshot (hover over to see the new one):</h3>\n          <img style=\"min-width:300px;width:100%\" src=\"data:image/png;base64,${imgOldBase64}\" />\n        </div>\n      </div>\n      <div style=\"background:#fff;border:solid 15px #fff\">\n        <h3>Diff between new and old screenshot</h3>\n        <img style=\"min-width:300px;width:100%\" src=\"data:image/png;base64,${imgDiffBase64}\" />\n      </div>\n    </div>\n  </div>\n</div>`;\n\n/* c8 ignore start */\nbefore(() => {\n  if (!top) return null;\n  Cypress.$(`.${OVERLAY_CLASS}`, top.document.body).remove();\n});\n\nafter(() => {\n  if (!top) return null;\n\n  cy.task(TASK.cleanupImages, { log: false });\n\n  Cypress.$(top.document.body).on(\n    \"click\",\n    `a[href^=\"${LINK_PREFIX}\"]`,\n    function (e) {\n      e.preventDefault();\n      if (!top) return false;\n\n      const {\n        title,\n        imgPath,\n        imgDiffBase64,\n        imgNewBase64,\n        imgOldBase64,\n        error,\n      } = JSON.parse(\n        decodeURIComponent(\n          Base64.decode(\n            e.currentTarget.getAttribute(\"href\").substring(LINK_PREFIX.length)\n          )\n        )\n      );\n      queueClear();\n\n      cy.task<boolean>(\n        TASK.doesFileExist,\n        { path: imgPath },\n        { log: false }\n      ).then((wasImageNotUpdatedYet) => {\n        if (!top) return false;\n\n        Cypress.$(\n          generateOverlayTemplate({\n            title,\n            imgNewBase64,\n            imgOldBase64,\n            imgDiffBase64,\n            error,\n            wasImageNotUpdatedYet,\n          })\n        ).appendTo(top.document.body);\n\n        const wrapper = Cypress.$(`.${OVERLAY_CLASS}`, top.document.body);\n        wrapper.on(\"click\", 'button[data-type=\"close\"]', function () {\n          wrapper.remove();\n        });\n\n        wrapper.on(\"submit\", \"form\", function (e) {\n          queueClear();\n          e.preventDefault();\n\n          cy.task(TASK.approveImage, { img: imgPath }).then(() =>\n            wrapper.remove()\n          );\n\n          queueRun();\n        });\n      });\n\n      queueRun();\n\n      return false;\n    }\n  );\n});\n/* c8 ignore stop */\n"],"names":["PLUGIN_NAME","LINK_PREFIX","OVERLAY_CLASS","FILE_SUFFIX","TASK","getScreenshotPathInfo","compareImages","approveImage","cleanupImages","doesFileExist","constructCypressError","log","err","onFail","error","capitalize","text","charAt","toUpperCase","slice","getPluginEnv","key","Cypress","env","booleanOption","options","truthyValue","falsyValue","optionWithDefaults","defaultValue","getImagesDir","imagesDir","console","warn","getImagesPath","getConfig","scaleFactor","window","devicePixelRatio","createMissingImages","updateImages","imagesPath","maxDiffThreshold","diffConfig","screenshotConfig","matchAgainstPath","undefined","Commands","add","prevSubject","subject","$el","title","currentRetryNumber","cy","state","currentRetry","then","task","titleFromOptions","currentTest","titlePath","join","specPath","spec","relative","screenshotPath","titleFromTask","imgPath","wrap","screenshot","onAfterScreenshot","el","props","path","imgNew","imgOld","replace","actual","res","name","displayName","set","Error","message","imgDiffBase64","imgNewBase64","imgOldBase64","Base64","encode","encodeURIComponent","JSON","stringify","diffValue","imgDiff","imgNewPath","imgDiffPath","diff","imgBase64","Buffer","from","img","queueClear","queue","reset","clear","queueRun","run","generateOverlayTemplate","wasImageNotUpdatedYet","before","top","$","document","body","remove","after","on","e","preventDefault","parse","decodeURIComponent","decode","currentTarget","getAttribute","substring","length","appendTo","wrapper"],"mappings":"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"}